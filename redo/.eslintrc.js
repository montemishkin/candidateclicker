const OFF = 'off';
const WARN = 'warn';
const ERROR = 'error';

const TAB_LENGTH = 2;

module.exports = {
  parser: 'babel-eslint',
  parserOptions: {
    sourceType: 'module',
    ecmaVersion: 8,
    ecmaFeatures: {
      globalReturn: false,
      impliedStrict: false,
      jsx: true,
      experimentalObjectRestSpread: true,
    },
  },
  env: {
    browser: true,
    commonjs: true,
    es6: true,
  },
  plugins: ['flowtype', 'react'],
  settings: {
    flowtype: {
      onlyFilesWithFlowAnnotation: false,
    },
  },
  rules: {
    /*
     * https://github.com/babel/eslint-plugin-babel
     * TODO: install plugin and figure out wtf these do
     */
    // 'babel/new-cap': ,
    // 'babel/object-curly-spacing': ,
    // 'babel/no-invalid-this': ,
    // 'babel/semi': ,

    /*
     * https://github.com/gajus/eslint-plugin-flowtype
     */

    'flowtype/boolean-style': [WARN, 'boolean'],
    // TODO
    'flowtype/define-flow-type': WARN,
    'flowtype/delimiter-dangle': [WARN, 'always-multiline'],
    // TODO: turned off because didnt play well with prettier's line breaks
    'flowtype/generic-spacing': [OFF, 'never'],
    'flowtype/no-dupe-keys': WARN,
    'flowtype/no-primitive-constructor-types': WARN,
    'flowtype/no-types-missing-file-annotation': OFF,
    'flowtype/no-weak-types': OFF,
    'flowtype/object-type-delimiter': [WARN, 'comma'],
    'flowtype/require-parameter-type': [WARN, {excludeArrowFunctions: true}],
    // TODO
    'flowtype/require-return-type': [
      WARN,
      'always',
      {
        annotateUndefined: 'always',
        excludeArrowFunctions: true,
      },
    ],
    'flowtype/require-valid-file-annotation': OFF,
    'flowtype/require-variable-type': OFF,
    'flowtype/semi': [WARN, 'always'],
    // NOTE: turned off because annoying af
    'flowtype/sort-keys': [
      OFF,
      'asc',
      {
        caseSensitive: true,
        natural: true,
      },
    ],
    'flowtype/space-after-type-colon': [WARN, 'always'],
    'flowtype/space-before-generic-bracket': [WARN, 'never'],
    'flowtype/space-before-type-colon': [WARN, 'never'],
    'flowtype/type-id-match': [WARN, '^([A-Z]+[a-z0-9]*)+$'],
    'flowtype/union-intersection-spacing': [WARN, 'always'],
    // TODO
    'flowtype/use-flow-type': WARN,
    'flowtype/valid-syntax': OFF, // (deprecated)

    /*
     * https://github.com/yannickcr/eslint-plugin-react
     */

    'react/boolean-prop-naming': OFF,
    'react/default-props-match-prop-types': OFF,
    'react/display-name': OFF,
    'react/forbid-component-props': OFF,
    'react/forbid-elements': OFF,
    'react/forbid-prop-types': OFF,
    'react/forbid-foreign-prop-types': OFF,
    'react/no-array-index-key': OFF,
    'react/no-children-prop': WARN,
    'react/no-danger': OFF,
    'react/no-danger-with-children': WARN,
    'react/no-deprecated': WARN,
    // TODO
    // 'react/no-did-mount-set-state': ,
    // TODO
    // 'react/no-did-update-set-state': ,
    'react/no-direct-mutation-state': WARN,
    'react/no-find-dom-node': WARN,
    'react/no-is-mounted': WARN,
    'react/no-multi-comp': OFF,
    'react/no-redundant-should-component-update': WARN,
    'react/no-render-return-value': WARN,
    'react/no-set-state': OFF,
    // TODO: at time of writing this rule was merged but not released
    // 'react/no-typos': WARN,
    'react/no-string-refs': WARN,
    'react/no-unescaped-entities': WARN,
    'react/no-unknown-property': WARN,
    // TODO
    // 'react/no-unused-prop-types': ,
    'react/no-will-update-set-state': WARN,
    'react/prefer-es6-class': [WARN, 'always'],
    'react/prefer-stateless-function': OFF,
    'react/prop-types': OFF,
    'react/react-in-jsx-scope': WARN,
    'react/require-default-props': OFF,
    'react/require-optimization': OFF,
    'react/require-render-return': WARN,
    'react/self-closing-comp': [WARN, {component: true, html: true}],
    // TODO: turned off because private var was causing warning
    'react/sort-comp': [
      OFF,
      {
        order: [
          'static-methods',
          'type-annotations',
          'lifecycle',
          'render',
          'everything-else',
        ],
        groups: {
          lifecycle: [
            'displayName',
            'propTypes',
            'contextTypes',
            'childContextTypes',
            'mixins',
            'statics',
            'defaultProps',
            'constructor',
            'getDefaultProps',
            'getInitialState',
            'state',
            'getChildContext',
            'componentWillMount',
            'componentDidMount',
            'componentWillReceiveProps',
            'shouldComponentUpdate',
            'componentWillUpdate',
            'componentDidUpdate',
            'componentWillUnmount',
          ],
        },
      },
    ],
    'react/sort-prop-types': OFF,
    'react/style-prop-object': WARN,
    'react/void-dom-elements-no-children': WARN,
    'react/jsx-boolean-value': [WARN, 'always'],
    'react/jsx-closing-bracket-location': [WARN, 'tag-aligned'],
    'react/jsx-closing-tag-location': WARN,
    'react/jsx-curly-spacing': [WARN, 'never'],
    'react/jsx-equals-spacing': [WARN, 'never'],
    'react/jsx-filename-extension': OFF,
    'react/jsx-first-prop-new-line': [WARN, 'multiline'],
    'react/jsx-handler-names': OFF,
    'react/jsx-indent': [WARN, TAB_LENGTH],
    'react/jsx-indent-props': [WARN, TAB_LENGTH],
    // TODO: is this flaky?
    'react/jsx-key': WARN,
    // TODO: turned off because prettier doesn't allow this to be configured
    'react/jsx-max-props-per-line': [OFF, {maximum: 1, when: 'always'}],
    // TODO
    'react/jsx-no-bind': [
      OFF,
      {
        ignoreRefs: false,
        allowArrowFunctions: false,
        allowBind: false,
      },
    ],
    'react/jsx-no-comment-textnodes': WARN,
    'react/jsx-no-duplicate-props': WARN,
    'react/jsx-no-literals': OFF,
    'react/jsx-no-target-blank': WARN,
    'react/jsx-no-undef': WARN,
    'react/jsx-pascal-case': WARN,
    'react/jsx-sort-props': OFF,
    'react/jsx-space-before-closing': [WARN, 'always'],
    'react/jsx-tag-spacing': [
      WARN,
      {
        closingSlash: 'never',
        beforeSelfClosing: 'always',
        afterOpening: 'never',
      },
    ],
    'react/jsx-uses-react': WARN,
    'react/jsx-uses-vars': WARN,
    'react/jsx-wrap-multilines': WARN,

    /*
     * http://eslint.org/docs/rules/#possible-errors
     */
    'for-direction': WARN,
    'getter-return': WARN,
    'no-await-in-loop': WARN,
    'no-compare-neg-zero': WARN,
    'no-cond-assign': [WARN, 'always'],
    'no-console': WARN,
    'no-constant-condition': WARN,
    'no-control-regex': WARN,
    'no-debugger': WARN,
    'no-dupe-args': WARN,
    'no-dupe-keys': WARN,
    'no-duplicate-case': WARN,
    'no-empty': WARN,
    'no-empty-character-class': WARN,
    'no-ex-assign': WARN,
    'no-extra-boolean-cast': WARN,
    // TODO
    // 'no-extra-parens': ,
    'no-extra-semi': WARN,
    'no-func-assign': WARN,
    // TODO
    'no-inner-declarations': OFF,
    'no-invalid-regexp': WARN,
    'no-irregular-whitespace': WARN,
    'no-obj-calls': WARN,
    'no-prototype-builtins': OFF,
    'no-regex-spaces': WARN,
    'no-sparse-arrays': WARN,
    'no-template-curly-in-string': WARN,
    'no-unexpected-multiline': WARN,
    'no-unreachable': WARN,
    'no-unsafe-finally': WARN,
    'no-unsafe-negation': WARN,
    'use-isnan': WARN,
    'valid-jsdoc': OFF,
    'valid-typeof': WARN,

    /*
     * http://eslint.org/docs/rules/#best-practices
     */
    'accessor-pairs': [WARN, {setWithoutGet: true, getWithoutSet: true}],
    'array-callback-return': WARN,
    'block-scoped-var': WARN,
    'class-methods-use-this': OFF,
    complexity: WARN,
    // 'consistent-return': ,
    // 'curly': ,
    // 'default-case': ,
    // 'dot-location': ,
    // 'dot-notation': ,
    // 'eqeqeq': ,
    // 'guard-for-in': ,
    // 'no-alert': ,
    // 'no-caller': ,
    // 'no-case-declarations': ,
    // 'no-div-regex': ,
    // 'no-else-return': ,
    // 'no-empty-function': ,
    // 'no-empty-pattern': ,
    // 'no-eq-null': ,
    // 'no-eval': ,
    // 'no-extend-native': ,
    // 'no-extra-bind': ,
    // 'no-extra-label': ,
    // 'no-fallthrough': ,
    // 'no-floating-decimal': ,
    // 'no-global-assign': ,
    // 'no-implicit-coercion': ,
    // 'no-implicit-globals': ,
    // 'no-implied-eval': ,
    // 'no-invalid-this': ,
    // 'no-iterator': ,
    // 'no-labels': ,
    // 'no-lone-blocks': ,
    // 'no-loop-func': ,
    // 'no-magic-numbers': ,
    // 'no-multi-spaces': ,
    // 'no-multi-str': ,
    // 'no-new': ,
    // 'no-new-func': ,
    // 'no-new-wrappers': ,
    // 'no-octal': ,
    // 'no-octal-escape': ,
    // 'no-param-reassign': ,
    // 'no-proto': ,
    // 'no-redeclare': ,
    // 'no-restricted-properties': ,
    // 'no-return-assign': ,
    // 'no-return-await': ,
    // 'no-script-url': ,
    // 'no-self-assign': ,
    // 'no-self-compare': ,
    // 'no-sequences': ,
    // 'no-throw-literal': ,
    // 'no-unmodified-loop-condition': ,
    // 'no-unused-expressions': ,
    // 'no-unused-labels': ,
    // 'no-useless-call': ,
    // 'no-useless-concat': ,
    // 'no-useless-escape': ,
    // 'no-useless-return': ,
    // 'no-void': ,
    // 'no-warning-comments': ,
    // 'no-with': ,
    // 'prefer-promise-reject-errors': ,
    // 'radix': ,
    // 'require-await': ,
    // 'vars-on-top': ,
    // 'wrap-iife': ,
    // 'yoda': ,

    /*
     * http://eslint.org/docs/rules/#strict-mode
     */
    // 'strict': ,

    /*
     * http://eslint.org/docs/rules/#variables
     */
    // 'init-declarations': ,
    // 'no-catch-shadow': ,
    // 'no-delete-var': ,
    // 'no-label-var': ,
    // 'no-restricted-globals': ,
    // 'no-shadow': ,
    // 'no-shadow-restricted-names': ,
    // 'no-undef': ,
    // 'no-undef-init': ,
    // 'no-undefined': ,
    'no-unused-vars': [
      WARN,
      {vars: 'all', args: 'none', ignoreRestSiblings: true},
    ],
    // 'no-use-before-define': ,

    /*
     * http://eslint.org/docs/rules/#nodejs-and-commonjs
     */
    // 'callback-return': ,
    // 'global-require': ,
    // 'handle-callback-err': ,
    // 'no-buffer-constructor': ,
    // 'no-mixed-requires': ,
    // 'no-new-require': ,
    // 'no-path-concat': ,
    // 'no-process-env': ,
    // 'no-process-exit': ,
    // 'no-restricted-modules': ,
    // 'no-sync': ,

    /*
     * http://eslint.org/docs/rules/#stylistic-issues
     */
    // 'array-bracket-newline': ,
    // 'array-bracket-spacing': ,
    // 'array-element-newline': ,
    // 'block-spacing': ,
    // 'brace-style': ,
    // 'camelcase': ,
    // 'capitalized-comments': ,
    // 'comma-dangle': ,
    // 'comma-spacing': ,
    // 'comma-style': ,
    // 'computed-property-spacing': ,
    // 'consistent-this': ,
    // 'eol-last': ,
    // 'func-call-spacing': ,
    // 'func-name-matching': ,
    // 'func-names': ,
    // 'func-style': ,
    // 'id-blacklist': ,
    // 'id-length': ,
    // 'id-match': ,
    // 'indent': ,
    // 'jsx-quotes': ,
    // 'key-spacing': ,
    // 'keyword-spacing': ,
    // 'line-comment-position': ,
    // 'linebreak-style': ,
    // 'lines-around-comment': ,
    // 'max-depth': ,
    // 'max-len': ,
    // 'max-lines': ,
    // 'max-nested-callbacks': ,
    // 'max-params': ,
    // 'max-statements': ,
    // 'max-statements-per-line': ,
    // 'multiline-ternary': ,
    // 'new-cap': ,
    // 'new-parens': ,
    // 'newline-per-chained-call': ,
    // 'no-array-constructor': ,
    // 'no-bitwise': ,
    // 'no-continue': ,
    // 'no-inline-comments': ,
    // 'no-lonely-if': ,
    // 'no-mixed-operators': ,
    // 'no-mixed-spaces-and-tabs': ,
    // 'no-multi-assign': ,
    // 'no-multiple-empty-lines': ,
    // 'no-negated-condition': ,
    // 'no-nested-ternary': ,
    // 'no-new-object': ,
    // 'no-plusplus': ,
    // 'no-restricted-syntax': ,
    // 'no-tabs': ,
    // 'no-ternary': ,
    // 'no-trailing-spaces': ,
    // 'no-underscore-dangle': ,
    // 'no-unneeded-ternary': ,
    // 'no-whitespace-before-property': ,
    // 'nonblock-statement-body-position': ,
    // 'object-curly-newline': ,
    // 'object-curly-spacing': ,
    // 'object-property-newline': ,
    // 'one-var': ,
    // 'one-var-declaration-per-line': ,
    // 'operator-assignment': ,
    // 'operator-linebreak': ,
    // 'padded-blocks': ,
    // 'padding-line-between-statements': ,
    // 'quote-props': ,
    // 'quotes': ,
    // 'require-jsdoc': ,
    // 'semi': ,
    // 'semi-spacing': ,
    // 'semi-style': ,
    // 'sort-keys': ,
    // 'sort-vars': ,
    // 'space-before-blocks': ,
    // 'space-before-function-paren': ,
    // 'space-in-parens': ,
    // 'space-infix-ops': ,
    // 'space-unary-ops': ,
    // 'spaced-comment': ,
    // 'switch-colon-spacing': ,
    // 'template-tag-spacing': ,
    // 'unicode-bom': ,
    // 'wrap-regex': ,

    /*
     * http://eslint.org/docs/rules/#ecmascript-6
     */
    // 'arrow-body-style': ,
    // 'arrow-parens': ,
    // 'arrow-spacing': ,
    // 'constructor-super': ,
    // 'generator-star-spacing': ,
    // 'no-class-assign': ,
    // 'no-confusing-arrow': ,
    // 'no-const-assign': ,
    // 'no-dupe-class-members': ,
    // 'no-duplicate-imports': ,
    // 'no-new-symbol': ,
    // 'no-restricted-imports': ,
    // 'no-this-before-super': ,
    // 'no-useless-computed-key': ,
    // 'no-useless-constructor': ,
    // 'no-useless-rename': ,
    // 'no-var': ,
    // 'object-shorthand': ,
    // 'prefer-arrow-callback': ,
    // 'prefer-const': ,
    // 'prefer-destructuring': ,
    // 'prefer-numeric-literals': ,
    // 'prefer-rest-params': ,
    // 'prefer-spread': ,
    // 'prefer-template': ,
    // 'require-yield': ,
    // 'rest-spread-spacing': ,
    // 'sort-imports': ,
    // 'symbol-description': ,
    // 'template-curly-spacing': ,
    // 'yield-star-spacing': ,
  },
};
