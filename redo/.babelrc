{
  "presets": [["env", {"modules": false}]],
  "env": {
    "test": {
      "plugins": ["transform-es2015-modules-commonjs"]
    }
  },
  // ORDER MATTERS
  "plugins": [
    // had to be moved (from Experimental) above something (though idk what)
    "babel-plugin-transform-class-properties",

    // Not on Babel page

    "babel-plugin-syntax-flow",

    // had to be moved (from Other) above class properties transform
    "babel-plugin-transform-flow-strip-types",

    // ES3

    "babel-plugin-transform-es3-member-expression-literals",
    "babel-plugin-transform-es3-property-literals",

    // ES5

    "babel-plugin-transform-es5-property-mutators",

    // ES2015

    "babel-plugin-transform-es2015-arrow-functions",
    "babel-plugin-transform-es2015-block-scoped-functions",
    "babel-plugin-transform-es2015-block-scoping",
    "babel-plugin-transform-es2015-classes",
    "babel-plugin-transform-es2015-computed-properties",
    "babel-plugin-transform-es2015-constants",
    "babel-plugin-transform-es2015-destructuring",
    "babel-plugin-transform-es2015-duplicate-keys",
    "babel-plugin-transform-es2015-for-of",
    "babel-plugin-transform-es2015-function-name",
    "babel-plugin-transform-es2015-literals",
    "babel-plugin-transform-es2015-object-super",
    "babel-plugin-transform-es2015-parameters",
    "babel-plugin-transform-es2015-shorthand-properties",
    "babel-plugin-transform-es2015-spread",
    "babel-plugin-transform-es2015-sticky-regex",
    "babel-plugin-transform-es2015-template-literals",
    "babel-plugin-transform-es2015-typeof-symbol",
    "babel-plugin-transform-es2015-unicode-regex",

    // ES2016

    "babel-plugin-transform-exponentiation-operator",

    // ES2017

    "babel-plugin-transform-async-to-generator",

    // Modules

    // "babel-plugin-transform-es2015-modules-amd",
    // "babel-plugin-transform-es2015-modules-commonjs",
    // "babel-plugin-transform-es2015-modules-systemjs",
    // "babel-plugin-transform-es2015-modules-umd",

    // Experimental

    "babel-plugin-transform-async-generator-functions",
    "babel-plugin-transform-async-to-module-method",
    // "babel-plugin-transform-class-constructor-call (deprecated)",
    "babel-plugin-transform-decorators",
    "babel-plugin-transform-do-expressions",
    "babel-plugin-transform-export-extensions",
    "babel-plugin-transform-function-bind",
    "babel-plugin-transform-object-rest-spread",

    // Minification

    // "babel-plugin-transform-inline-environment-variables",
    // "babel-plugin-transform-inline-consecutive-adds",
    // "babel-plugin-transform-member-expression-literals",
    // "babel-plugin-transform-merge-sibling-variables",
    // "babel-plugin-transform-minify-booleans",
    // "babel-plugin-transform-minify-constant-folding",
    // "babel-plugin-transform-minify-dead-code-elimination",
    // "babel-plugin-transform-minify-empty-function",
    // "babel-plugin-transform-minify-flip-comparisons",
    // "babel-plugin-transform-minify-guarded-expressions",
    // "babel-plugin-transform-minify-infinity",
    // "babel-plugin-transform-minify-mangle-names",
    // "babel-plugin-transform-minify-numeric-literals",
    // "babel-plugin-transform-minify-replace",
    // "babel-plugin-transform-minify-simplify",
    // "babel-plugin-transform-minify-type-constructors",
    // "babel-plugin-transform-node-env-inline",
    // "babel-plugin-transform-property-literals",
    // "babel-plugin-transform-regexp-constructors",
    // "babel-plugin-transform-remove-console",
    // "babel-plugin-transform-remove-debugger",
    // "babel-plugin-transform-simplify-comparison-operators",
    // "babel-plugin-transform-undefined-to-void",

    // React

    "babel-plugin-transform-react-constant-elements",
    "babel-plugin-transform-react-display-name",
    "babel-plugin-transform-react-inline-elements",
    "babel-plugin-transform-react-jsx",
    "babel-plugin-transform-react-jsx-compat",
    "babel-plugin-transform-react-jsx-self",
    "babel-plugin-transform-react-jsx-source",

    // Other

    // "babel-plugin-transform-eval",
    // "babel-plugin-transform-flow-comments",
    "babel-plugin-transform-jscript",
    // "babel-plugin-transform-object-assign",
    // "babel-plugin-transform-object-set-prototype-of-to-assign",
    // "babel-plugin-transform-proto-to-assign",
    "babel-plugin-transform-regenerator",
    // "babel-plugin-transform-runtime",
    "babel-plugin-transform-strict-mode"
  ]
}
